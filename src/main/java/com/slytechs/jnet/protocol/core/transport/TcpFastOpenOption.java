/*
 * Sly Technologies Free License
 * 
 * Copyright 2023 Sly Technologies Inc.
 *
 * Licensed under the Sly Technologies Free License (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.slytechs.com/free-license-text
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.slytechs.jnet.protocol.core.transport;

import com.slytechs.jnet.protocol.core.constants.CoreConstants;
import com.slytechs.jnet.protocol.core.constants.TcpOptionId;
import com.slytechs.jnet.protocol.meta.Meta;
import com.slytechs.jnet.protocol.meta.MetaResource;

/**
 * The TCP option Fast Open (TFO) is an optional mechanism within TCP that
 * allows endpoints that have established a full TCP connection in the past
 * eliminate a round-trip of the handshake and send data right away.
 * <p>
 * TFO works by using a TFO cookie (a TCP option), which is a cryptographic
 * cookie stored on the client and set upon the initial connection with the
 * server. When the client later reconnects, it sends the initial SYN packet
 * along with the TFO cookie data to authenticate itself.
 * </p>
 * <p>
 * If the server accepts the TFO cookie, it will send a SYN-ACK packet with the
 * ACK flag set, allowing the client to send data immediately. This can
 * significantly improve the performance of TCP connections by reducing the time
 * it takes to establish the connection.
 * </p>
 * <p>
 * TFO is supported by most modern operating systems and web browsers. To use
 * TFO, both the client and server must settingsSupport it.
 * </p>
 * <p>
 * Here are some of the benefits of using TFO:
 * </p>
 * <ul>
 * <li>Reduced connection establishment time: TFO can reduce the time it takes
 * to establish a TCP connection by eliminating the need for the three-way
 * handshake.</li>
 * <li>Increased throughput: TFO can increase the throughput of TCP connections
 * by allowing the client to send data immediately after the connection is
 * established.</li>
 * <li>Improved reliability: TFO can improve the reliability of TCP connections
 * by reducing the number of retransmissions that are needed.</li>
 * </ul>
 * <p>
 * TFO is a valuable tool for improving the performance and reliability of TCP
 * connections. It can be used to improve the performance of web browsing, file
 * transfers, and other applications that use TCP.
 * </p>
 * 
 */
@MetaResource("tcp-opt-fast-open-meta.json")
public class TcpFastOpenOption extends TcpOption {

	/** The Constant ID. */
	public static final int ID = TcpOptionId.TCP_OPT_ID_FASTOPEN;

	/**
	 * Instantiates a new tcp fast open option.
	 */
	public TcpFastOpenOption() {
		super(ID, CoreConstants.TCP_OPTION_KIND_FASTOPEN, CoreConstants.TCP_OPTION_LEN_FASTOPEN);
	}

	/**
	 * Gets the TCP TFO option cookie field value.
	 * <p>
	 * The TCP option fast open cookie field is a 16-byte field that is used to
	 * authenticate the client's (source) IP address of the SYN packet. The IP
	 * address may be an IPv4 or IPv6 address. The cookie is generated by the server
	 * and encrypted using the client's IP address. The cookie is sent to the client
	 * in the SYN-ACK packet. The client then decrypts the cookie using its own IP
	 * address and compares it to the cookie that it generated. If the cookies
	 * match, then the client knows that it is talking to the correct server.
	 * </p>
	 * <p>
	 * The fast open cookie field is used to improve the performance of TCP
	 * connections by eliminating the need for the three-way handshake. With the
	 * three-way handshake, the client and server exchange three packets before data
	 * can be sent. With fast open, the client can send data in the first packet
	 * after the SYN-ACK packet.
	 * </p>
	 * <p>
	 * The fast open cookie field is supported by most modern TCP implementations.
	 * It is enabled by default in most operating systems and web browsers.
	 * </p>
	 * <p>
	 * Here are some of the benefits of using the fast open cookie field:
	 * </p>
	 * <ul>
	 * <li>Improved performance: The fast open cookie field can improve the
	 * performance of TCP connections by eliminating the need for the three-way
	 * handshake.</li>
	 * <li>Reduced latency: The fast open cookie field can reduce the latency of TCP
	 * connections by allowing the client to send data in the first packet after the
	 * SYN-ACK packet.</li>
	 * <li>Improved security: The fast open cookie field can improve the security of
	 * TCP connections by providing an additional layer of authentication.</li>
	 * </ul>
	 * <p>
	 * The fast open cookie field is a valuable tool for improving the performance,
	 * reliability, and security of TCP connections. It can be used to improve the
	 * performance of web browsing, file transfers, and other applications that use
	 * TCP.
	 * </p>
	 *
	 * @param dst    the destination array where to store the cookie's value
	 * @param offset the offset into the dst array
	 * @return the supplied array reference
	 */
	@Meta
	public byte[] cookie(byte[] dst, int offset) {
		buffer().get(2, dst, offset, 16);

		return dst;
	}

}